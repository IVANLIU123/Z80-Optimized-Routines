;Created by E37
#ifndef included_get_sFont_custom
#define included_get_sFont_custom


#define text_temp_RAM prevDData
get_sFont_custom:
;Different input but same output as B_CALL _Load_SFont (Destroys a, hl, de)
;See fasttext.z80 for using custom font
;Tested for the ti84, ti84se and ti83+. May or may not work on other calcs.
;Inputs:
;   A = char
;Outputs:
;   hl = sFont_record
;   sFont_record = the 8 byte character sprite to be displayed
   ld   h, 0
   ld   l, a
   add   hl, hl
   add   hl, hl
   add   hl, hl

   ld   a, i   ;check if interrupts are enabled for re-enabling later
   push   af   ;since we change the page swapped into $4000 - $7FFF bad things could happen if there was an interrupt there
   push   bc
   di          ;We'll be doing off-page calls, so to be safe, disable interrupts

   call   verify_call

   ld   de, (text_temp_RAM)
   add   hl, de
   ld   de, sFont_record
   push   de
   ld   bc, 8
   call   text_temp_RAM + 2
   pop   hl

   pop   bc
   pop   af
   ret   po   ;return if interrupts were disabled
   ei      ;turn interrupts back on
   ret

verify_call:
   ld   a, (text_temp_RAM + 14)
   cp   0C9h
   ret   z

   push   hl
   ld   a, (iy + hookflags3)
   push   af
   res   fontHookActive, (iy + hookflags3)   ;Disable the font hook flag while we get the pointer to the table or we might get a pointer to the custom font table instead
   bcall(_SFont_Len)   ;A side effect of this bcall is that it leaves de equal to the start of the small font character table
   pop   af            ;We can assume that the small font table is on the same page as bcall _SFont_Len
   ld   (iy + hookflags3), a
   ld   (text_temp_RAM), de   ;table address

   ld   hl, get_SFont_Len_pointers   ;copy to ram and call
   ld   de, text_temp_RAM + 2
   ld   bc, 9
   ldir

   ld   b, a
   in   a, (6)
   ld   c, a
   ld   a, b
   call   text_temp_RAM + 2
   ld a,l

   ld   hl, get_text_sprite   ;Copy get_text_sprite
   ld   de, text_temp_RAM + 2
   ld   bc, 13
   ldir

   pop   hl
   ret

get_text_sprite:   ;length = 13 bytes
   in   a, (6)
   push   af
   ld   a, 3
   out   (6), a
   ldir
   pop   af
   out   (6), a
   ret

get_SFont_Len_pointers:   ;length = 9 bytes
   out   (6), a
   ld   hl, (_SFont_Len + 2)
   ld   a, c
   out   (6), a
   ret
#endif
